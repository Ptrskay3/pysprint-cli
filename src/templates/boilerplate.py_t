ifg = ps.{{ methodname }}.parse_raw(
    "{{ filename }}",
   {%- if filename2 %} "{{ filename2 }}", {% endif %}
   {%- if filename3 %} "{{ filename3 }}", {% endif %}
   {% if skiprows %} skiprows={{ skiprows }}, {%- else %} 0, {% endif %}
   {% if decimal %} decimal="{{ decimal }}", {%- else %} ".", {% endif %}
   {% if delimiter %} delimiter="{{ delimiter }}", {%- else %} ",", {% endif %}
   {% if meta_len %} meta_len={{ meta_len }} {%- else %} "0" {% endif %}
)

SKIP_IF = ("ref", "sam", "reference", "sample", "noeval")

for entry in SKIP_IF:
    if entry in ifg.meta['comment']:
        import sys
        sys.exit("file skipped due to user comment")

{% if chdomain -%} ifg.chdomain() {%- endif %}

{% if slice_start and slice_stop -%} ifg.slice({{ slice_start }}, {{ slice_stop }}){%- endif %}
{%- if slice_start and not slice_stop -%} ifg.slice(start={{ slice_start }}){%- endif %}
{%- if not slice_start and slice_stop -%} ifg.slice(stop={{ slice_stop }}){%- endif %}

{%if detach %}
with ps.interactive("TkAgg"):
    ifg.plot()
    ifg.show()
{% endif %}


{% for cmd in before_evaluate_triggers %}
{{ cmd }}
{% endfor %}

{% if methodname == "FFTMethod" %}
ifg.autorun({{ reference_frequency }}, {{ order }}, show_graph=False, enable_printing=False)
{% elif methodname == "WFTMethod" %}
ifg.cover(100, fwhm=0.05)
ifg.calculate({{ reference_frequency }}, {{ order }}, parallel=True, fastmath=False)
{% else %}
print("not implemented yet")
{% endif %}

{% for cmd in after_evaluate_triggers %}
{{ cmd }}
{% endfor %}